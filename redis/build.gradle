/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'sayseakleng' at '8/12/16 8:54 AM' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

ext {
	springVersion = '4.2.6.RELEASE'
	logbackVersion = '1.1.7'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.springframework.data:spring-data-redis:1.7.2.RELEASE'
    
    // lettuce client
    compile 'org.apache.commons:commons-pool2:2.4.2'
    compile 'biz.paluch.redis:lettuce:3.5.0.Final'
    
    // jedis client
    compile 'redis.clients:jedis:2.9.0'
    
    
    // Log
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile 'org.slf4j:jcl-over-slf4j:1.7.21'
    
    

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile "org.springframework:spring-test:$springVersion"
}
